---
title: "Add Lesson Title Here"
author: "Your Name"
date: "yyyy-mm-dd"
date-modified: "yyyy-mm-dd"
type: "Coding Exercise"
category: "Programming Concepts"
subcategory: "R Programming"
tags:
  - placeholder
---

Make changes to the template file at: https://github.com/epi-workbench/EWBTemplates

```{r, type=initial}
library(testthat)
```

# Load packages

```{r}
library(dplyr, warn.conflicts = FALSE)
```

# Data

Add link to wiki about datasets

[Click to download data.xls](Lesson File Uploder URL)

# Images

Add link to 


# Code blocks

```{r}
# x <- 10
x <- __
```

```{r, type=solution}
# Solution Code Block
x <- 10
```

```{r, type=hide}
# Setup
# Optionally, reset the environment.
rm(list = ls(envir = student_env), envir = student_env)

# Create a new environment to evaluate the student's code
student_env <- new.env()

# Example: simulate evaluating a student's submission
# (Replace the string with actual code from student input)
correct     <- "x <- 10" # Change this to test incorrect submissions
wrong_name  <- "z <- 10" 
wrong_value <- "x <- 11" 

# Set the active submission here (change only this line to switch test cases)
test_code <- correct

# Evaluate the code in the isolated environment
eval(parse(text = correct), envir = student_env)

# Tests
# 1 – Confirm x exists
test_that("Object 'x' is created", {
  expect_true(exists("x", envir = student_env))
})

# 2 – Confirm x is of the expected type and value
test_that("x is a numeric value", {
  expect_type(student_env$x, "double")
  expect_equal(student_env$x, 10)  # optional: expected value
})
```

```{r, type=test}
# 1 – Confirm x exists
test_that("Object 'x' is created", {
  expect_true(exists("x", envir = student_env))
})

# 2 – Confirm x is of the expected type and value
test_that("x is a numeric value", {
  expect_type(student_env$x, "double")
  expect_equal(student_env$x, 10)  # optional: expected value
})
```

<!-- HINT:
x <- 10
-->

Add noeval code blocks too.


